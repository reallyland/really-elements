name: ci

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '*'
    tags-ignore:
      - '*'

defaults:
  run:
    shell: bash

env:
  CI_SKIP: false

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, 'doc:')"
    name: ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [16.x]
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Git log
        run: |
          if [ -n "$(git log --format=%B -n 1 | grep -iE '^[0-9]+[.]{1,}[0-9]+[.]{1,}[0-9]+')" ]; then
            echo "CI_SKIP=true" >> $GITHUB_ENV
          fi

      - name: Setup node@${{ matrix.target }}
        if: env.CI_SKIP != 'true'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.target }}

      - name: Setup Playwright
        if: env.CI_SKIP != 'true'
        uses: microsoft/playwright-github-action@v1

      - name: List versions
        continue-on-error: true
        if: env.CI_SKIP != 'true'
        run: |
          npm i -g npm@latest
          node -v && npm version && which npm && pwd && npx envinfo

      - name: Cache dependencies
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ matrix.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-npm-

      - name: Install dependencies
        if: env.CI_SKIP != 'true'
        run: |
          npm ci --quiet

      - name: Lint
        if: env.CI_SKIP != 'true'
        run: |
          npm run lint:build

      - name: Package check
        if: env.CI_SKIP != 'true'
        run: |
          npm run check

      - name: Run Test
        if: env.CI_SKIP != 'true'
        run: |
          npm t

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        if: env.CI_SKIP != 'true' && success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unit_tests
